{"version":3,"sources":["TaskInput.js","Task.js","App.js","redux/actions/actionTasks.js","redux/reducers/reducerTasks.js","redux/store.js","index.js"],"names":["Taskinput","addTask","React","useState","input","state","setState","className","onChange","e","target","value","onClick","Task","task","props","ActionBtn","done","deleteTask","doneTask","tittle","App","useSelector","tasks","dispatch","useDispatch","activeTasks","filter","item","doneTasks","length","map","id","type","payload","doneTaskAction","deleteTaskAction","addTaskAction","initialstate","action","newTask","index","indexOf","newState","store","createStore","reducerTasks","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"2MAyBeA,MAvBf,YAAiC,IAAZC,EAAW,EAAXA,QACnB,EAA0BC,IAAMC,SAAS,CAAEC,MAAO,KAAlD,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OACE,sBAAKC,UAAU,aAAf,UACE,uBAAOC,SANO,SAACC,GACjBH,EAAS,CAAEF,MAAOK,EAAEC,OAAOC,SAKKA,MAAON,EAAMD,QAC3C,wBAAQQ,QAfG,WACb,IAAQR,EAAUC,EAAVD,MACJA,IACFH,EAAQG,GACRE,EAAS,CAAEF,MAAO,OAWlB,qB,mBCGSS,EArBF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAASC,EAAY,iBAC7BC,EAAY,kBAChB,qBAAKT,UAAU,aAAf,SACGO,EAAKG,KACJ,mBAAGL,QAASG,EAAMG,WAAlB,oBAEA,mBAAGN,QAASG,EAAMI,SAAlB,6BAKAZ,EAAY,SAAWO,EAAKG,KAAO,YAAc,IAEvD,OACE,sBAAKV,UAAWA,EAAhB,UACE,4BAAIO,EAAKM,SACT,cAACJ,EAAD,Q,OC2BSK,MAnCf,WACE,IAAMhB,EAAQiB,aAAY,SAACC,GAAD,OAAWA,KAE/BC,EAAWC,cAcXC,EAAcrB,EAAMsB,QAAO,SAACC,GAAD,OAAWA,EAAKX,QAC3CY,EAAYxB,EAAMsB,QAAO,SAACC,GAAD,OAAUA,EAAKX,QAC9C,OACE,sBAAKV,UAAU,MAAf,UACE,qBAAIA,UAAU,MAAd,4BAAoCmB,EAAYI,UAC/C,sBAAIJ,GAAJ,YAAoBG,IAAWE,KAAI,SAACjB,GAAD,OAClC,cAAC,EAAD,CACEA,KAAMA,EAENK,SAAU,kBAjBAa,EAiBelB,EAAKkB,QAhBpCR,ECf0B,SAACQ,GAAD,MAAS,CACrCC,KAAM,YACNC,QAASF,GDaEG,CAAeH,IADT,IAACA,GAkBVd,WAAY,kBAdAc,EAciBlB,EAAKkB,QAbxCR,ECd4B,SAACQ,GAAD,MAAS,CACvCC,KAAM,cACNC,QAASF,GDYEI,CAAiBJ,IADT,IAACA,IAYPlB,EAAKkB,OAKd,cAAC,EAAD,CAAW/B,QAzBC,SAACa,GACfU,EChByB,SAACV,GAAD,MAAW,CACtCmB,KAAM,WACNC,QAASpB,GDcEuB,CAAcvB,W,QEhBrBwB,EAAe,CACnB,CAAEN,GAAI,EAAGZ,OAAQ,8EAAmBH,MAAM,GAC1C,CAAEe,GAAI,EAAGZ,OAAQ,8EAAmBH,MAAM,GAC1C,CAAEe,GAAI,EAAGZ,OAAQ,8EAAmBH,MAAM,IA8B7BM,EA3BD,WAAmC,IAAlClB,EAAiC,uDAAzBiC,EAAcC,EAAW,uCAC9C,OAAQA,EAAON,MACb,IAAK,WACH,IAAMO,EAAU,CACdR,GAAqB,IAAjB3B,EAAMyB,OAAezB,EAAMyB,OAAS,EACxCV,OAAQmB,EAAOL,QACfjB,MAAM,GAER,MAAM,GAAN,mBAAWZ,GAAX,CAAkBmC,IAGpB,IAAK,YACH,IAAMC,EAAQpC,EAAM0B,KAAI,SAACjB,GAAD,OAAUA,EAAKkB,MAAIU,QAAQH,EAAOL,SAE1D,OADA7B,EAAMoC,GAAOxB,MAAO,EACb,YAAIZ,GAGb,IAAK,cACH,IAAIsC,EAAWtC,EAAMsB,QAAO,SAACb,GAAD,OAAUA,EAAKkB,KAAOO,EAAOL,WACzD,OAAO,YAAIS,GAGb,QACE,OAAOtC,ICtBEuC,EALDC,YACZC,EACAC,OAAOC,8BAAgCD,OAAOC,gCCGhDC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.714c1e0a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Taskinput({ addTask }) {\r\n  const [state, setState] = React.useState({ input: \"\" });\r\n\r\n  let addTasks = () => {\r\n    const { input } = state;\r\n    if (input) {\r\n      addTask(input);\r\n      setState({ input: \"\" });\r\n    }\r\n  };\r\n\r\n  let inputChange = (e) => {\r\n    setState({ input: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-input\">\r\n      <input onChange={inputChange} value={state.input}></input>\r\n      <button onClick={addTasks}>ADD</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Taskinput;\r\n","import React from \"react\";\r\n\r\nconst Task = ({ task, ...props }) => {\r\n  const ActionBtn = () => (\r\n    <div className=\"action-btn\">\r\n      {task.done ? (\r\n        <p onClick={props.deleteTask}>❌</p>\r\n      ) : (\r\n        <p onClick={props.doneTask}>✔️</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const className = \"task \" + (task.done ? \"task-done\" : \"\");\r\n\r\n  return (\r\n    <div className={className}>\r\n      <p>{task.tittle}</p>\r\n      <ActionBtn></ActionBtn>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\nimport Taskinput from \"./TaskInput\";\nimport Task from \"./Task\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  addTaskAction,\n  doneTaskAction,\n  deleteTaskAction,\n} from \"./redux/actions/actionTasks\";\n\nfunction App() {\n  const state = useSelector((tasks) => tasks);\n\n  const dispatch = useDispatch();\n\n  const addTask = (task) => {\n    dispatch(addTaskAction(task));\n  };\n\n  const doneTask = (id) => {\n    dispatch(doneTaskAction(id));\n  };\n\n  const deleteTask = (id) => {\n    dispatch(deleteTaskAction(id));\n  };\n\n  const activeTasks = state.filter((item) => !item.done);\n  const doneTasks = state.filter((item) => item.done);\n  return (\n    <div className=\"App\">\n      <h1 className=\"top\"> Active tasks: {activeTasks.length}</h1>\n      {[...activeTasks, ...doneTasks].map((task) => (\n        <Task\n          task={task}\n          key={task.id}\n          doneTask={() => doneTask(task.id)}\n          deleteTask={() => deleteTask(task.id)}\n        />\n      ))}\n      <Taskinput addTask={addTask}></Taskinput>\n    </div>\n  );\n}\n\nexport default App;\n","export const addTaskAction = (task) => ({\r\n  type: \"ADD_TASK\",\r\n  payload: task,\r\n});\r\n\r\nexport const doneTaskAction = (id) => ({\r\n  type: \"DONE_TASK\",\r\n  payload: id,\r\n});\r\n\r\nexport const deleteTaskAction = (id) => ({\r\n  type: \"DELETE_TASK\",\r\n  payload: id,\r\n});\r\n","const initialstate = [\r\n  { id: 0, tittle: \"Новое задание 1\", done: false },\r\n  { id: 1, tittle: \"Новое задание 2\", done: true },\r\n  { id: 2, tittle: \"Новое задание 3\", done: false },\r\n];\r\n\r\nconst tasks = (state = initialstate, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TASK\": {\r\n      const newTask = {\r\n        id: state.length !== 0 ? state.length : 0,\r\n        tittle: action.payload,\r\n        done: false,\r\n      };\r\n      return [...state, newTask];\r\n    }\r\n\r\n    case \"DONE_TASK\": {\r\n      const index = state.map((task) => task.id).indexOf(action.payload);\r\n      state[index].done = true;\r\n      return [...state];\r\n    }\r\n\r\n    case \"DELETE_TASK\": {\r\n      let newState = state.filter((task) => task.id !== action.payload);\r\n      return [...newState];\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasks;\r\n","import { createStore } from \"redux\";\r\nimport reducerTasks from \"./reducers/reducerTasks\";\r\nconst store = createStore(\r\n  reducerTasks,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}